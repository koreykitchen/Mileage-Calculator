{"version":3,"sources":["locationSelect.js","location.js","day.js","week.js","main.js","data.js","index.js"],"names":["LocationSelect","props","state","style","fontWeight","this","currentDay","id","width","populateSelectElement","onClick","addSelectedStoreToDay","marginLeft","storeListData","map","storeObject","index","Name","key","value","Address","City","selectElement","document","getElementById","storeToAddIndex","options","selectedIndex","storeToAdd","addSelectedStoreToCurrentDay","React","Component","Location","className","removeStop","color","Day","numberOfStops","populateLocationsHtml","Array","fill","_","Week","dayData","setupWeekdayTabs","totalMiles","data","getDaysData","callback","setDayData","console","log","daysData","tempDayData","setState","findIndex","day","setCurrentDayTab","margin","Main","Data","dataHasBeenLoaded","getStoreListData","callbackFunctionToStoreData","textAlign","padding","callbackFunction","dataClassObject","request","XMLHttpRequest","open","responseType","onload","response","send","dataToStore","rawData","Uint8Array","workbook","XLSX","read","type","worksheet","Sheets","SheetNames","jsonStoreListData","utils","sheet_to_json","blankrows","filter","sort","firstStore","secondStore","firstStoreName","toUpperCase","secondStoreName","comparison","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e290299e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass LocationSelect extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = { };\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n        <div>\r\n                    \r\n          <p>Select a store to add to your <span style={{fontWeight: 'bold'}}>\r\n              {this.props.currentDay}</span> route: </p>\r\n\r\n          <select id='locationSelectElement' style={{width:'75vw'}}>\r\n\r\n            {this.populateSelectElement()}\r\n\r\n          </select>\r\n\r\n          <button onClick={() => this.addSelectedStoreToDay()} \r\n                  style={{marginLeft: '25px'}}>Add Store</button>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n  populateSelectElement()\r\n  {\r\n    return this.props.storeListData.map((storeObject, index) => \r\n                {\r\n                    if(storeObject.Name)\r\n                    {\r\n                      return (<option key={index} value={index}>\r\n                                {storeObject.Name + ' - ' + storeObject.Address +\r\n                                  ' - ' + storeObject.City}\r\n                              </option>);\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                      return [];\r\n                    }\r\n                });\r\n\r\n  }\r\n\r\n  addSelectedStoreToDay()\r\n  {\r\n    var selectElement = document.getElementById(\"locationSelectElement\");\r\n\r\n    var storeToAddIndex = selectElement.options[selectElement.selectedIndex].value;\r\n    \r\n    var storeToAdd = this.props.storeListData[storeToAddIndex];\r\n\r\n    this.props.addSelectedStoreToCurrentDay(storeToAdd);\r\n  }\r\n}\r\n\r\nexport default LocationSelect;\r\n\r\n","import React from 'react';\r\n\r\nclass Location extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n                <p>Test Location</p>\r\n                <button onClick={this.removeStop} style={{color: 'red'}}>Remove</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    removeStop()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport default Location;\r\n\r\n","import React from 'react';\r\n\r\nimport Location from './location.js';\r\n\r\nclass Day extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = {  numberOfStops: 3 };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                <p>{this.state.numberOfStops} stop(s) added to the day...</p>\r\n\r\n                {this.populateLocationsHtml()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    populateLocationsHtml()\r\n    {\r\n        if (this.state.numberOfStops === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        else\r\n        {\r\n            return Array(this.state.numberOfStops)\r\n                    .fill(null).map((_, index) => (<Location key={index}/>));\r\n        }\r\n    }\r\n}\r\n\r\nexport default Day;\r\n\r\n","import React from 'react';\r\n\r\nimport LocationSelect from './locationSelect.js';\r\n\r\nimport Day from './day.js';\r\n\r\nclass Week extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = {  currentDay: \"Sunday\" , dayData: new Array(7).fill([]) };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                {this.setupWeekdayTabs()}\r\n\r\n                <button onClick={this.totalMiles}  \r\n                        style={{marginLeft:'25px'}}>Total Mileage</button>\r\n\r\n                <LocationSelect currentDay={this.state.currentDay} \r\n                                storeListData={this.props.storeListData}\r\n                                addSelectedStoreToCurrentDay={this.addSelectedStoreToCurrentDay}/>\r\n\r\n                <Day data={this.state.dayData[this.getDaysData()]} callback={this.setDayData}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addSelectedStoreToCurrentDay(storeToAdd)\r\n    {\r\n        console.log(storeToAdd);\r\n    }\r\n\r\n    setDayData(daysData)\r\n    {\r\n        var tempDayData = this.state.dayData;\r\n\r\n        tempDayData[this.getDaysData()] = daysData;\r\n\r\n        this.setState({dayData: tempDayData});\r\n    }\r\n\r\n    getDaysData()\r\n    {\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                    \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        return days.findIndex((day) => (day === this.state.currentDay));\r\n    }\r\n\r\n    setupWeekdayTabs()\r\n    {\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                    \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        return days.map((day, index) => (<button key={day}\r\n                                                onClick={() => this.setCurrentDayTab(index)} \r\n                                                style={{margin:'1px'}}>{day}</button>));\r\n    }\r\n\r\n    setCurrentDayTab(index)\r\n    {\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                    \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        this.setState({ currentDay: days[index] });\r\n    }\r\n\r\n    totalMiles()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport default Week;\r\n\r\n","import React from 'react';\r\n\r\nimport Week from './week.js';\r\n\r\nclass Main extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = { };\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n\r\n        <h1>Mileage Calculator</h1>\r\n\r\n        <p>A Note Before Using:</p>\r\n          \r\n        <p>Mileage calculator is still in development, and therefore may be prone to bugs and crashes...</p>\r\n\r\n        <p>Some functionality may be missing or incomplete...</p>\r\n\r\n        <Week storeListData={this.props.storeListData}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nimport Main from './main.js';\r\n\r\nclass Data extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = { storeListData: [], dataHasBeenLoaded: false }; \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getStoreListData(this.callbackFunctionToStoreData, this);\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(!this.state.dataHasBeenLoaded)\r\n        {\r\n            return (<h1 style={{textAlign: 'center', padding: '100px'}}>LOADING...</h1>);\r\n        }\r\n\r\n        else\r\n        {\r\n            return (<Main storeListData={this.state.storeListData} />);\r\n        }\r\n    }\r\n\r\n    getStoreListData(callbackFunction, dataClassObject)\r\n    {\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.open(\"GET\", \"https://koreykitchen.github.io/Mileage-Calculator/StoreList.xlsx\", true);\r\n\r\n        request.responseType = \"arraybuffer\";\r\n\r\n        request.onload = function() \r\n        {\r\n            callbackFunction(request.response, dataClassObject);\r\n        };\r\n\r\n        request.send();\r\n    }\r\n\r\n    callbackFunctionToStoreData(dataToStore, dataClassObject)\r\n    {\r\n        var rawData = new Uint8Array(dataToStore);\r\n\r\n        var workbook = XLSX.read(rawData, {type:\"array\"});\r\n\r\n        var worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        var jsonStoreListData = XLSX.utils.sheet_to_json(worksheet, {blankrows:false});\r\n\r\n        jsonStoreListData = jsonStoreListData.filter(storeObject => (storeObject.Name));\r\n\r\n        jsonStoreListData = jsonStoreListData.sort((firstStore, secondStore) =>\r\n                                    {\r\n                                        var firstStoreName = firstStore.Name.toUpperCase();\r\n                                        var secondStoreName = secondStore.Name.toUpperCase();\r\n\r\n                                        var comparison = 0;\r\n\r\n                                        if (firstStoreName > secondStoreName) \r\n                                        {\r\n                                            comparison = 1;\r\n                                        } \r\n\r\n                                        else if (firstStoreName < secondStoreName) \r\n                                        {\r\n                                            comparison = -1;\r\n                                        }\r\n\r\n                                        return comparison;\r\n                                    }\r\n                                );\r\n\r\n        dataClassObject.setState({ storeListData: jsonStoreListData, dataHasBeenLoaded: true });\r\n    }\r\n}\r\n\r\nexport default Data;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Data from './data';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Data />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}