{"version":3,"sources":["Week/locationSelect.js","Week/location.js","Week/day.js","Week/week.js","Distance/legDistance.js","Distance/dayDistance.js","Distance/weekDistance.js","TopLevel/main.js","TopLevel/data.js","index.js"],"names":["LocationSelect","props","state","selectElementOptions","populateSelectElement","style","fontWeight","this","currentDay","id","width","onClick","addStore","currentDayIndex","storeListData","getSelectedIndex","marginLeft","map","storeObject","index","Name","key","value","Address","City","selectElement","document","getElementById","options","selectedIndex","React","Component","Location","className","storeData","removeStore","dayIndex","locationIndex","color","float","Day","currentDaysData","length","populateLocationsHtml","daysData","Array","fill","_","Week","arrayOfDayNames","weekdayTabs","setupWeekdayTabs","swapWeekOrDistanceDisplay","getDaysIndex","getDaysData","dayToGetDataFor","findIndex","day","arrayOfDaysData","dayName","setCurrentDay","margin","setState","LegDistance","startVenue","legData","start_address","endVenue","end_address","convertMetersToMiles","distance","meters","Math","round","DayDistance","content","loaded","totalMiles","dayResults","storeResults","requestMileageCalculation","getDayNameFromIndex","dayData","window","google","maps","DirectionsService","route","buildUpMileageRequestForDay","callbackToStoreResults","startLocation","endLocation","waypoints","currentLocationIndex","push","location","origin","destination","travelMode","result","legDistanceElementArray","routes","legs","legIndex","calculateDaysTotalMiles","totalMeters","callbackToStoreDaysMiles","WeekDistance","arrayOfResults","callbacksToStoreResults","generateCallbacksToStoreResults","daysMilesArray","callbacksToStoreDaysMiles","generateCallbacksToStoreDaysMiles","callbackToSetAsLoaded","bind","scriptElement","createElement","src","onload","body","appendChild","displayLoadingOrDayDistanceElements","dayDistanceElementArray","textAlign","calculateWeeksTotalMiles","status","storeCalculatedDistance","distanceElement","tempArrayOfResults","numberOfMiles","tempDaysMilesArray","storeDaysTotalMiles","Main","weekDisplayed","renderWeekOrDistance","ref","element","storeToAdd","tempArrayOfDaysData","tempDaysData","storeToRemoveIndex","splice","Data","dataHasBeenLoaded","callbackFunctionToStoreData","getStoreListData","padding","callbackFunction","request","XMLHttpRequest","open","responseType","response","send","dataToStore","rawData","Uint8Array","workbook","XLSX","read","type","worksheet","Sheets","SheetNames","jsonStoreListData","utils","sheet_to_json","blankrows","filter","sort","firstStore","secondStore","firstStoreName","toUpperCase","secondStoreName","comparison","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d3792949.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass LocationSelect extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = {  };\r\n\r\n    this.selectElementOptions = this.populateSelectElement();\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n        <div>\r\n                    \r\n          <p>Select a store to add to your <span style={{fontWeight: 'bold'}}>\r\n              {this.props.currentDay}</span> route: </p>\r\n\r\n          <select id='locationSelectElement' style={{width:'75vw'}}>\r\n\r\n            {this.selectElementOptions}\r\n\r\n          </select>\r\n\r\n          <button onClick={() => \r\n                    (this.props.addStore(this.props.currentDayIndex, \r\n                      this.props.storeListData[this.getSelectedIndex()]))} \r\n                  style={{marginLeft: '25px'}}>Add Store</button>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n  populateSelectElement()\r\n  {\r\n    return this.props.storeListData.map((storeObject, index) => \r\n                {\r\n                    if(storeObject.Name)\r\n                    {\r\n                      return (<option key={index} value={index}>\r\n                                {storeObject.Name + ' - ' + storeObject.Address +\r\n                                  ' - ' + storeObject.City}\r\n                              </option>);\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                      return [];\r\n                    }\r\n                });\r\n\r\n  }\r\n\r\n  getSelectedIndex()\r\n  {\r\n    var selectElement = document.getElementById(\"locationSelectElement\");\r\n\r\n    if(selectElement)\r\n    {\r\n      return selectElement.options[selectElement.selectedIndex].value;\r\n    }\r\n\r\n    else\r\n    {\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport default LocationSelect;\r\n\r\n","import React from 'react';\r\n\r\nclass Location extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                {this.props.storeData.Name + ' - ' + this.props.storeData.Address +\r\n                    ' - ' + this.props.storeData.City}\r\n\r\n                <button onClick={() => (this.props.removeStore(this.props.dayIndex, this.props.locationIndex))} \r\n                        style={{color: 'red', float: 'right'}}>Remove</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Location;\r\n\r\n","import React from 'react';\r\n\r\nimport Location from './location.js';\r\n\r\nclass Day extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                <p>{this.props.currentDaysData.length} store(s) added to the day...</p>\r\n\r\n                {this.populateLocationsHtml([...this.props.currentDaysData])}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    populateLocationsHtml(daysData)\r\n    {\r\n        if (daysData.length === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        else\r\n        {\r\n            return Array(daysData.length)\r\n                    .fill(null)\r\n                    .map((_, index) => \r\n                            (<Location  key={index} \r\n                                        locationIndex={index}\r\n                                        dayIndex={this.props.currentDayIndex}\r\n                                        storeData={daysData[index]}\r\n                                        removeStore={this.props.removeStore} />));\r\n        }\r\n    }\r\n}\r\n\r\nexport default Day;\r\n\r\n","import React from 'react';\r\n\r\nimport LocationSelect from './locationSelect.js';\r\n\r\nimport Day from './day.js';\r\n\r\nclass Week extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = { currentDay: \"Sunday\" };\r\n\r\n        this.arrayOfDayNames =  [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                                 \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        this.weekdayTabs = this.setupWeekdayTabs();\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                {this.weekdayTabs}\r\n\r\n                <button onClick={() => (this.props.swapWeekOrDistanceDisplay())}  \r\n                        style={{marginLeft:'25px'}}>Total Mileage</button>\r\n\r\n                <LocationSelect currentDay={this.state.currentDay}\r\n                                currentDayIndex={this.getDaysIndex(this.state.currentDay)}\r\n                                storeListData={this.props.storeListData} \r\n                                addStore={this.props.addStore}/>\r\n\r\n                <Day    currentDayIndex={this.getDaysIndex(this.state.currentDay)}\r\n                        currentDaysData={this.getDaysData(this.state.currentDay)} \r\n                        removeStore={this.props.removeStore} /> \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getDaysData(dayToGetDataFor)\r\n    {\r\n        var dayIndex = this.arrayOfDayNames.findIndex((day) => (day === dayToGetDataFor));\r\n\r\n        return this.props.arrayOfDaysData[dayIndex];\r\n    }\r\n\r\n    getDaysIndex(dayName)\r\n    {\r\n        return this.arrayOfDayNames.findIndex((day) => (day === this.state.currentDay));\r\n    }\r\n\r\n    setupWeekdayTabs()\r\n    {\r\n        return this.arrayOfDayNames.map((day, index) => \r\n                                            (<button key={day}\r\n                                                onClick={() => (this.setCurrentDay(index))} \r\n                                                style={{margin:'1px'}}>{day}</button>));\r\n    }\r\n\r\n    setCurrentDay(dayIndex)\r\n    {   \r\n        this.setState({ currentDay: this.arrayOfDayNames[dayIndex] });\r\n    }\r\n}\r\n\r\nexport default Week;\r\n\r\n","import React from 'react';\r\n\r\nclass LegDistance extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                <p>{\"Start Address: \" + this.props.startVenue + \", \" + this.props.legData.start_address}</p>\r\n                <p>{\"End Address: \" + this.props.endVenue + \", \" + this.props.legData.end_address}</p>\r\n                <p>{\"Distance: \" + this.convertMetersToMiles(this.props.legData.distance.value)}</p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n  \r\n    convertMetersToMiles(meters)\r\n    {\r\n        return (Math.round((meters * 0.000621371) * 10) / 10);\r\n    }\r\n}\r\n\r\nexport default LegDistance;\r\n\r\n","import React from 'react';\r\n\r\nimport LegDistance from './legDistance.js';\r\n\r\nclass DayDistance extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = { content: \"LOADING...\", loaded: false, totalMiles: 0 }; \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if(this.props.dayResults && !this.state.loaded)\r\n        {\r\n            this.storeResults(this.props.dayResults);\r\n        }\r\n\r\n        else\r\n        {\r\n            this.requestMileageCalculation();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        if(this.props.dayResults && !this.state.loaded)\r\n        {\r\n            this.storeResults(this.props.dayResults);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n\r\n            <div className=\"bordered-div\">\r\n\r\n                <p style={{fontWeight: 'bold'}}>{(this.getDayNameFromIndex(this.props.dayIndex) + \": \")}</p>\r\n\r\n                {this.state.content}\r\n\r\n                <p>{this.getDayNameFromIndex(this.props.dayIndex) + \"'s total miles: \" + \r\n                        this.state.totalMiles}</p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    requestMileageCalculation()\r\n    {\r\n        if((this.props.dayData.length >= 2) && ((this.props.dayData.length <= 12))) \r\n        {\r\n            var directionsService = new window.google.maps.DirectionsService();\r\n\r\n            directionsService.route(this.buildUpMileageRequestForDay(), \r\n                                    this.props.callbackToStoreResults);\r\n        }\r\n\r\n        else\r\n        {\r\n            this.setState({ content:    this.getDayNameFromIndex(this.props.dayIndex) + \r\n                                        \"'s number of stores must be between 2 and 12...\",\r\n                            loaded: true });\r\n        }\r\n    }\r\n\r\n    buildUpMileageRequestForDay()\r\n    {\r\n        var startLocation = this.props.dayData[0].Address + \",\" + this.props.dayData[0].City;\r\n\r\n        var endLocation =   this.props.dayData[this.props.dayData.length - 1].Address + \r\n                            \",\" + this.props.dayData[this.props.dayData.length - 1].City;\r\n\r\n        var waypoints = [];\r\n\r\n        for(var currentLocationIndex = 1; currentLocationIndex < this.props.dayData.length - 1; \r\n            currentLocationIndex++)\r\n        {\r\n            waypoints.push({location: (this.props.dayData[currentLocationIndex].Address + \",\" + \r\n                            this.props.dayData[currentLocationIndex].City)});\r\n        }\r\n\r\n        var mileageRequest = { origin: startLocation, destination: endLocation, waypoints: waypoints, \r\n                                travelMode: 'DRIVING'};\r\n\r\n        return mileageRequest;\r\n    }\r\n\r\n    storeResults(result)\r\n    {\r\n        var legDistanceElementArray = \r\n            new Array(result.routes[0].legs.length).fill(null)\r\n                .map((_, legIndex) => \r\n                    (<LegDistance   legData={result.routes[0].legs[legIndex]} \r\n                                    key={legIndex}\r\n                                    startVenue={this.props.dayData[legIndex].Name}\r\n                                    endVenue={this.props.dayData[legIndex + 1].Name} />)\r\n                );\r\n\r\n        this.setState({ content: legDistanceElementArray, loaded: true,\r\n                        totalMiles: this.calculateDaysTotalMiles(result) });\r\n    }\r\n\r\n    calculateDaysTotalMiles(result)\r\n    {\r\n        var totalMeters = 0;\r\n\r\n        for(var legResult of result.routes[0].legs)\r\n        {\r\n            totalMeters += legResult.distance.value;\r\n        }\r\n\r\n        this.props.callbackToStoreDaysMiles(this.convertMetersToMiles(totalMeters));\r\n\r\n        return this.convertMetersToMiles(totalMeters);\r\n    }\r\n\r\n    convertMetersToMiles(meters)\r\n    {\r\n        return (Math.round((meters * 0.000621371) * 10) / 10);\r\n    }\r\n\r\n    getDayNameFromIndex(dayIndex)\r\n    {\r\n        var arrayOfDayNames =  [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                                \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        return arrayOfDayNames[dayIndex];\r\n    }\r\n\r\n}\r\n\r\nexport default DayDistance;\r\n\r\n","import React from 'react';\r\n\r\nimport DayDistance from './dayDistance.js';\r\n\r\nclass WeekDistance extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {  loaded: false, arrayOfResults: new Array(7).fill(null),\r\n                        callbacksToStoreResults: this.generateCallbacksToStoreResults(),\r\n                        daysMilesArray: new Array(7).fill(0),\r\n                        callbacksToStoreDaysMiles: this.generateCallbacksToStoreDaysMiles() }; \r\n\r\n        this.callbackToSetAsLoaded = this.callbackToSetAsLoaded.bind(this);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if(!document.getElementById(\"googleMapsScriptElement\"))\r\n        {\r\n            var scriptElement = document.createElement('script');\r\n\r\n            scriptElement.id = \"googleMapsScriptElement\";\r\n\r\n            scriptElement.src = \"https://maps.googleapis.com/maps/api/js?\" + \r\n                                \"key=AIzaSyASFAgyRK86Z88JTF_LlbtUsLTmw0_eNdI\";\r\n\r\n            scriptElement.onload = this.callbackToSetAsLoaded;\r\n\r\n            document.body.appendChild(scriptElement);\r\n        }\r\n\r\n        else\r\n        {\r\n            this.setState({ loaded: true });\r\n        }\r\n    }\r\n\r\n    callbackToSetAsLoaded()\r\n    {\r\n        this.setState({ loaded: true });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n        \r\n            <div className=\"bordered-div\">\r\n\r\n                <button onClick={() => \r\n                    (this.props.swapWeekOrDistanceDisplay())}>Go Back</button>\r\n\r\n                {this.displayLoadingOrDayDistanceElements()}\r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n    displayLoadingOrDayDistanceElements()\r\n    {\r\n        if(!this.state.loaded)\r\n        {\r\n            return (<p>LOADING...</p>);\r\n        }\r\n\r\n        else\r\n        {\r\n            var dayDistanceElementArray = \r\n                new Array(7).fill(null).map((_, dayIndex) => \r\n                (\r\n                    <DayDistance    key={dayIndex} dayIndex={dayIndex} \r\n                                    dayData={this.props.arrayOfDaysData[dayIndex]}\r\n                                    dayResults={this.state.arrayOfResults[dayIndex]}\r\n                                    callbackToStoreResults={this.state.callbacksToStoreResults[dayIndex]}\r\n                                    callbackToStoreDaysMiles={this.state.callbacksToStoreDaysMiles[dayIndex]} />\r\n                ));\r\n\r\n            return (\r\n\r\n                <div>\r\n\r\n                    <p style={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                        {\"Total Miles: \" + this.calculateWeeksTotalMiles()}</p>\r\n\r\n                    {dayDistanceElementArray}\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    generateCallbacksToStoreResults()\r\n    {\r\n        return new Array(7).fill(null).map((_, dayIndex) => \r\n        (\r\n            (result, status) => \r\n            (\r\n                this.storeCalculatedDistance(result, status, dayIndex)\r\n            )\r\n        ));\r\n    }\r\n\r\n    storeCalculatedDistance(result, status, index)\r\n    {\r\n        if (status === 'OK') \r\n        {\r\n            window.distanceElement.storeResults(result, index);\r\n        }\r\n    }\r\n\r\n    storeResults(result, index)\r\n    {\r\n        var tempArrayOfResults = [...this.state.arrayOfResults];\r\n\r\n        tempArrayOfResults[index] = result;\r\n\r\n        this.setState({ arrayOfResults: tempArrayOfResults });\r\n    }\r\n\r\n    calculateWeeksTotalMiles()\r\n    {\r\n        var totalMiles = 0;\r\n\r\n        for(var daysMiles of this.state.daysMilesArray)\r\n        {\r\n            totalMiles += daysMiles;\r\n        }\r\n\r\n        return (Math.round((totalMiles * 10)) / 10);\r\n    }\r\n\r\n    storeDaysTotalMiles(numberOfMiles, dayIndex)\r\n    {\r\n        var tempDaysMilesArray = [...this.state.daysMilesArray];\r\n\r\n        tempDaysMilesArray[dayIndex] = numberOfMiles;\r\n\r\n        this.setState({ daysMilesArray: tempDaysMilesArray });\r\n    }\r\n\r\n    generateCallbacksToStoreDaysMiles()\r\n    {\r\n        return new Array(7).fill(null)\r\n            .map((_, dayIndex) => \r\n                (\r\n                    (numberOfMiles) => this.storeDaysTotalMiles(numberOfMiles, dayIndex)\r\n                )\r\n            );\r\n    }\r\n}\r\n\r\nexport default WeekDistance;\r\n\r\n","import React from 'react';\r\n\r\nimport Week from '../Week/week.js';\r\n\r\nimport WeekDistance from '../Distance/weekDistance.js';\r\n\r\nclass Main extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = { weekDisplayed: true,  arrayOfDaysData: new Array(7).fill([])};\r\n\r\n    this.addStore = this.addStore.bind(this);\r\n\r\n    this.removeStore = this.removeStore.bind(this);\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n\r\n        <h1>Mileage Calculator</h1>\r\n\r\n        <p>A Note Before Using:</p>\r\n          \r\n        <p>Mileage calculator is still in development, and therefore may be prone to bugs and crashes...</p>\r\n\r\n        <p>Some functionality may be missing or incomplete...</p>\r\n\r\n        {this.renderWeekOrDistance()}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderWeekOrDistance()\r\n  {\r\n    if(this.state.weekDisplayed)\r\n    {\r\n      return (<Week storeListData={this.props.storeListData}\r\n                    arrayOfDaysData={this.state.arrayOfDaysData}\r\n                    swapWeekOrDistanceDisplay={() => this.swapWeekOrDistanceDisplay()}\r\n                    addStore={this.addStore}\r\n                    removeStore={this.removeStore} />);\r\n    }\r\n\r\n    else\r\n    {\r\n      return (<WeekDistance   swapWeekOrDistanceDisplay={() => this.swapWeekOrDistanceDisplay()}\r\n                          arrayOfDaysData={this.state.arrayOfDaysData}\r\n                          ref={(element) => (window.distanceElement = element)}/>);\r\n    }\r\n  }\r\n\r\n  swapWeekOrDistanceDisplay()\r\n  {\r\n    this.setState({ weekDisplayed: !this.state.weekDisplayed });\r\n  }\r\n\r\n  addStore(dayIndex, storeToAdd)\r\n  {\r\n    var tempArrayOfDaysData = [...this.state.arrayOfDaysData];\r\n\r\n    var tempDaysData = [...tempArrayOfDaysData[dayIndex]];\r\n    \r\n    tempDaysData.push(storeToAdd);\r\n\r\n    tempArrayOfDaysData[dayIndex] = tempDaysData;\r\n\r\n    this.setState({arrayOfDaysData: tempArrayOfDaysData});\r\n  }\r\n\r\n  removeStore(dayIndex, storeToRemoveIndex)\r\n  {\r\n    var tempArrayOfDaysData = [...this.state.arrayOfDaysData];\r\n\r\n    var tempDaysData = [...tempArrayOfDaysData[dayIndex]];\r\n\r\n    tempDaysData.splice(storeToRemoveIndex, 1);\r\n\r\n    tempArrayOfDaysData[dayIndex] = tempDaysData;\r\n\r\n    this.setState({arrayOfDaysData: tempArrayOfDaysData});\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nimport Main from './main.js';\r\n\r\nclass Data extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = { storeListData: [], dataHasBeenLoaded: false }; \r\n\r\n        this.callbackFunctionToStoreData = this.callbackFunctionToStoreData.bind(this);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getStoreListData(this.callbackFunctionToStoreData);\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(!this.state.dataHasBeenLoaded)\r\n        {\r\n            return (<h1 style={{textAlign: 'center', padding: '100px'}}>LOADING...</h1>);\r\n        }\r\n\r\n        else\r\n        {\r\n            return (<Main storeListData={this.state.storeListData} />);\r\n        }\r\n    }\r\n\r\n    getStoreListData(callbackFunction)\r\n    {\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.open(\"GET\", \"https://koreykitchen.github.io/Mileage-Calculator/StoreList.xlsx\", true);\r\n\r\n        request.responseType = \"arraybuffer\";\r\n\r\n        request.onload = function() \r\n        {\r\n            callbackFunction(request.response);\r\n        };\r\n\r\n        request.send();\r\n    }\r\n\r\n    callbackFunctionToStoreData(dataToStore)\r\n    {\r\n        var rawData = new Uint8Array(dataToStore);\r\n\r\n        var workbook = XLSX.read(rawData, {type:\"array\"});\r\n\r\n        var worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        var jsonStoreListData = XLSX.utils.sheet_to_json(worksheet, {blankrows:false});\r\n\r\n        jsonStoreListData = jsonStoreListData.filter(storeObject => (storeObject.Name));\r\n\r\n        jsonStoreListData = jsonStoreListData.sort((firstStore, secondStore) =>\r\n                                    {\r\n                                        var firstStoreName = firstStore.Name.toUpperCase();\r\n                                        var secondStoreName = secondStore.Name.toUpperCase();\r\n\r\n                                        var comparison = 0;\r\n\r\n                                        if (firstStoreName > secondStoreName) \r\n                                        {\r\n                                            comparison = 1;\r\n                                        } \r\n\r\n                                        else if (firstStoreName < secondStoreName) \r\n                                        {\r\n                                            comparison = -1;\r\n                                        }\r\n\r\n                                        return comparison;\r\n                                    }\r\n                                );\r\n\r\n        this.setState({ storeListData: jsonStoreListData, dataHasBeenLoaded: true });\r\n    }\r\n}\r\n\r\nexport default Data;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Data from './TopLevel/data.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Data />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}