{"version":3,"sources":["locationSelect.js","location.js","day.js","week.js","main.js","data.js","index.js"],"names":["LocationSelect","props","state","style","fontWeight","this","day","width","populateSelect","onClick","addStop","data","marginLeft","map","_","index","Name","key","value","Address","City","console","log","React","Component","Location","venue","address","city","className","removeStop","color","Day","numberOfStops","populateLocationsHtml","Array","fill","Week","currentDay","setupWeekdayTabs","totalMiles","setCurrentDayTab","margin","setState","Main","storeData","Data","loaded","getListOfStores","callback","dataClass","req","XMLHttpRequest","open","responseType","onload","response","send","result","Uint8Array","workbook","XLSX","read","type","first_worksheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","blankrows","filter","store","sort","a","b","storeA","toUpperCase","storeB","comparison","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc3e5fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass LocationSelect extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = { };\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n        <div>\r\n                    \r\n          <p>Select a stop to add to your <span style={{fontWeight: 'bold'}}>\r\n              {this.props.day}</span> route: </p>\r\n\r\n          <select style={{width:'75vw'}}>\r\n\r\n            {this.populateSelect()}\r\n\r\n          </select>\r\n\r\n          <button onClick={() => (this.addStop(this.props.data))} style={{marginLeft: '25px'}}>Add Stop</button>\r\n\r\n          <br />\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n  populateSelect()\r\n  {\r\n    return this.props.data.map((_, index) => \r\n                {\r\n                    if(this.props.data[index].Name)\r\n                    {\r\n                      return (<option key={index} value={index}>\r\n                                {this.props.data[index].Name + ' - ' + \r\n                                  this.props.data[index].Address +\r\n                                  ' - ' + this.props.data[index].City}</option>);\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                      return [];\r\n                    }\r\n                });\r\n\r\n  }\r\n\r\n  addStop(data)\r\n  {\r\n    console.log(data);\r\n  }\r\n}\r\n\r\nexport default LocationSelect;\r\n\r\n","import React from 'react';\r\n\r\nclass Location extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = {  venue: \"\",\r\n                        address: \"\",\r\n                        city: \"\",\r\n                        state: \"\" };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n                <p>Test Location</p>\r\n                <button onClick={this.removeStop} style={{color: 'red'}}>Remove</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    removeStop()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport default Location;\r\n\r\n","import React from 'react';\r\n\r\nimport Location from './location.js';\r\n\r\nclass Day extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = {  numberOfStops: 3 };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                <p>{this.state.numberOfStops} stop(s) added to the day...</p>\r\n\r\n                {this.populateLocationsHtml()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    populateLocationsHtml()\r\n    {\r\n        if (this.state.numberOfStops === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        else\r\n        {\r\n            return Array(this.state.numberOfStops)\r\n                    .fill(null).map((_, index) => (<Location key={index}/>));\r\n        }\r\n    }\r\n}\r\n\r\nexport default Day;\r\n\r\n","import React from 'react';\r\n\r\nimport LocationSelect from './locationSelect.js';\r\n\r\nimport Day from './day.js';\r\n\r\nclass Week extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = {  currentDay: \"Sunday\"  };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                {this.setupWeekdayTabs()}\r\n\r\n                <button onClick={this.totalMiles}  \r\n                        style={{marginLeft:'25px'}}>Total Mileage</button>\r\n\r\n                <LocationSelect day={this.state.currentDay} data={this.props.data}/>\r\n\r\n                <Day />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    setupWeekdayTabs()\r\n    {\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                    \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        return days.map((day, index) => (<button key={day}\r\n                                                onClick={() => this.setCurrentDayTab(index)} \r\n                                                style={{margin:'1px'}}>{day}</button>));\r\n    }\r\n\r\n    setCurrentDayTab(index)\r\n    {\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                    \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        this.setState({ currentDay: days[index] });\r\n    }\r\n\r\n    totalMiles()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport default Week;\r\n\r\n","import React from 'react';\r\n\r\nimport Week from './week.js';\r\n\r\nclass Main extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = { storeData: this.props.data };\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n\r\n        <h1>Mileage Calculator</h1>\r\n\r\n        <p>A Note Before Using:</p>\r\n          \r\n        <p>Mileage calculator is still in development, and therefore may be prone to bugs and crashes...</p>\r\n\r\n        <p>Some functionality may be missing or incomplete...</p>\r\n\r\n        <Week data={this.state.storeData}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nimport Main from './main.js';\r\n\r\nclass Data extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {storeData: [], loaded: false};\r\n\r\n        this.getListOfStores(this.populateSelect, this);\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(!this.state.loaded)\r\n        {\r\n            return (<h3>LOADING...</h3>);\r\n        }\r\n\r\n        else\r\n        {\r\n            return (<Main data={this.state.storeData} />);\r\n        }\r\n    }\r\n\r\n    getListOfStores(callback, dataClass)\r\n    {\r\n        /* set up an async GET request */\r\n        var req = new XMLHttpRequest();\r\n\r\n        req.open(\"GET\", \"StoreList.xlsx\", true);\r\n\r\n        req.responseType = \"arraybuffer\";\r\n\r\n        req.onload = function() \r\n        {\r\n            callback(req.response, dataClass);\r\n        };\r\n\r\n        req.send();\r\n    }\r\n\r\n    populateSelect(result, dataClass)\r\n    {\r\n        /* parse the data when it is received */\r\n        var data = new Uint8Array(result);\r\n\r\n        var workbook = XLSX.read(data, {type:\"array\"});\r\n\r\n        /* DO SOMETHING WITH workbook HERE */\r\n        var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        var jsonData = XLSX.utils.sheet_to_json(first_worksheet, {blankrows:false});\r\n\r\n        jsonData = jsonData.filter(store => (store.Name));\r\n\r\n        jsonData = jsonData.sort((a, b) =>\r\n                                    {\r\n                                        var storeA = a.Name.toUpperCase();\r\n                                        var storeB = b.Name.toUpperCase();\r\n\r\n                                        var comparison = 0;\r\n\r\n                                        if (storeA > storeB) \r\n                                        {\r\n                                            comparison = 1;\r\n                                        } \r\n\r\n                                        else if (storeA < storeB) \r\n                                        {\r\n                                            comparison = -1;\r\n                                        }\r\n\r\n                                        return comparison;\r\n                                    }\r\n                                );\r\n\r\n        dataClass.setState({storeData: jsonData, loaded: true}); //console.log(jsonData);\r\n\r\n        /*\r\n        dataClass.state.storeData = jsonData;\r\n        dataClass.state.loaded = true;\r\n\r\n        */\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default Data;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Data from './data';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Data />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}