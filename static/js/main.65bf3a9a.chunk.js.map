{"version":3,"sources":["locationSelect.js","location.js","day.js","distance.js","week.js","main.js","data.js","index.js"],"names":["LocationSelect","props","state","style","fontWeight","this","currentDay","id","width","populateSelectElement","onClick","addSelectedStoreToDay","marginLeft","storeListData","map","storeObject","index","Name","key","value","Address","City","selectElement","document","getElementById","storeToAddIndex","options","selectedIndex","storeToAdd","addSelectedStoreToCurrentDay","weekDataObject","React","Component","Location","className","storeData","removeStore","color","float","Day","numberOfStores","currentDaysData","length","setState","populateLocationsHtml","daysData","Array","fill","_","splice","setDaysData","Distance","googleMapsHandle","loaded","status","getGoogleMapsHandle","request","origin","destination","travelMode","maps","DirectionsService","route","callback","result","window","distanceElement","storeDistance","Math","round","routes","legs","distance","Promise","resolve","reject","google","scriptElement","createElement","src","body","appendChild","loadGoogleMapsAPI","Week","arrayOfDaysData","totalClicked","arrayOfDayNames","setupWeekdayTabs","calculateTotalMiles","testDistance","ref","element","tempDayData","getDaysData","push","dayToSetDataFor","tempArrayOfDaysData","findIndex","day","dayToGetDataFor","dayIndex","setCurrentDay","margin","toSetCurrentDaysData","Main","weekDisplayed","renderWeekOrDistance","mainDataObject","Data","dataHasBeenLoaded","getStoreListData","callbackFunctionToStoreData","textAlign","padding","callbackFunction","dataClassObject","XMLHttpRequest","open","responseType","onload","response","send","dataToStore","rawData","Uint8Array","workbook","XLSX","read","type","worksheet","Sheets","SheetNames","jsonStoreListData","utils","sheet_to_json","blankrows","filter","sort","firstStore","secondStore","firstStoreName","toUpperCase","secondStoreName","comparison","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.65bf3a9a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass LocationSelect extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = { };\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n        <div>\r\n                    \r\n          <p>Select a store to add to your <span style={{fontWeight: 'bold'}}>\r\n              {this.props.currentDay}</span> route: </p>\r\n\r\n          <select id='locationSelectElement' style={{width:'75vw'}}>\r\n\r\n            {this.populateSelectElement()}\r\n\r\n          </select>\r\n\r\n          <button onClick={() => this.addSelectedStoreToDay()} \r\n                  style={{marginLeft: '25px'}}>Add Store</button>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n  populateSelectElement()\r\n  {\r\n    return this.props.storeListData.map((storeObject, index) => \r\n                {\r\n                    if(storeObject.Name)\r\n                    {\r\n                      return (<option key={index} value={index}>\r\n                                {storeObject.Name + ' - ' + storeObject.Address +\r\n                                  ' - ' + storeObject.City}\r\n                              </option>);\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                      return [];\r\n                    }\r\n                });\r\n\r\n  }\r\n\r\n  addSelectedStoreToDay()\r\n  {\r\n    var selectElement = document.getElementById(\"locationSelectElement\");\r\n\r\n    var storeToAddIndex = selectElement.options[selectElement.selectedIndex].value;\r\n    \r\n    var storeToAdd = this.props.storeListData[storeToAddIndex];\r\n\r\n    this.props.addSelectedStoreToCurrentDay(storeToAdd, this.props.weekDataObject);\r\n  }\r\n}\r\n\r\nexport default LocationSelect;\r\n\r\n","import React from 'react';\r\n\r\nclass Location extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                {this.props.storeData.Name + ' - ' + this.props.storeData.Address +\r\n                    ' - ' + this.props.storeData.City}\r\n\r\n                <button onClick={() => (this.props.removeStore())} \r\n                        style={{color: 'red', float: 'right'}}>Remove</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Location;\r\n\r\n","import React from 'react';\r\n\r\nimport Location from './location.js';\r\n\r\nclass Day extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        var numberOfStores = this.props.weekDataObject.state.currentDaysData.length;\r\n\r\n        this.state = {  numberOfStores: numberOfStores };\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        var numberOfStores = this.props.weekDataObject.state.currentDaysData.length;\r\n\r\n        if(this.state.numberOfStores !== numberOfStores)\r\n        {\r\n            this.setState({ numberOfStores: numberOfStores });\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        var currentDaysData = [...this.props.weekDataObject.state.currentDaysData];\r\n\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                <p>{this.state.numberOfStores} store(s) added to the day...</p>\r\n\r\n                {this.populateLocationsHtml(currentDaysData)}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    populateLocationsHtml(daysData)\r\n    {\r\n        if (daysData.length === 0)\r\n        {\r\n            return [];\r\n        }\r\n\r\n        else\r\n        {\r\n            return Array(daysData.length)\r\n                    .fill(null)\r\n                    .map((_, index) => \r\n                            (<Location  key={index} \r\n                                        storeData={daysData[index]}\r\n                                        removeStore={() => (this.removeStore(index))} />));\r\n        }\r\n    }\r\n\r\n    removeStore(index)\r\n    {\r\n        var currentDaysData = [...this.props.weekDataObject.state.currentDaysData];\r\n\r\n        currentDaysData.splice(index, 1);\r\n\r\n        this.props.weekDataObject.setDaysData(currentDaysData, this.props.weekDataObject.state.currentDay);\r\n    }\r\n}\r\n\r\nexport default Day;\r\n\r\n","import React from 'react';\r\n\r\nclass Distance extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = { googleMapsHandle: null, loaded: true, status: \"LOADING...\" }; \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getGoogleMapsHandle();\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(!this.state.googleMapsHandle)\r\n        {\r\n            return (<p>{this.state.status}</p>);\r\n        }\r\n\r\n        else\r\n        {\r\n            if(!this.state.loaded)\r\n            {\r\n                var directionsService = new this.state.googleMapsHandle.maps.DirectionsService();\r\n\r\n                var start = \"Binghamton,NY\";\r\n\r\n                var end = \"Conklin,NY\";\r\n\r\n                var request = { origin: start, destination: end, travelMode: 'DRIVING'};\r\n\r\n                directionsService.route(request, this.callback);\r\n            }\r\n\r\n            return (<p>{this.state.status}</p>);\r\n        }\r\n    }\r\n\r\n    callback(result, status)\r\n    {\r\n        if (status === 'OK') \r\n        {\r\n            window.distanceElement.storeDistance(result);\r\n        }\r\n    }\r\n\r\n    storeDistance(result)\r\n    {\r\n        this.setState({ status: ((Math.round((result.routes[0].legs[0].distance.value * 0.000621371) * 10) / 10) +\r\n                                    \" miles...\"), loaded: true });\r\n    }\r\n\r\n    loadGoogleMapsAPI()\r\n    {\r\n        return new Promise(function (resolve, reject) \r\n        {\r\n            resolve(window.google);\r\n\r\n            reject(\"Error loading Google Maps API...\");\r\n\r\n            if(!document.getElementById(\"googleMapsScriptElement\"))\r\n            {\r\n                var scriptElement = document.createElement('script');\r\n\r\n                scriptElement.id = \"googleMapsScriptElement\";\r\n\r\n                scriptElement.src = \"https://maps.googleapis.com/maps/api/js?\" + \r\n                                    \"key=AIzaSyASFAgyRK86Z88JTF_LlbtUsLTmw0_eNdI\";\r\n\r\n                document.body.appendChild(scriptElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    async getGoogleMapsHandle()\r\n    {\r\n        var googleMapsHandle = await this.loadGoogleMapsAPI();\r\n\r\n        this.setState({ googleMapsHandle: googleMapsHandle});\r\n    }\r\n}\r\n\r\nexport default Distance;\r\n\r\n","import React from 'react';\r\n\r\nimport LocationSelect from './locationSelect.js';\r\n\r\nimport Day from './day.js';\r\n\r\nimport Distance from './distance.js';\r\n\r\nclass Week extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state = {  currentDay: \"Sunday\" , arrayOfDaysData: new Array(7).fill([]),\r\n                        currentDaysData:  [], totalClicked: false};\r\n\r\n        this.arrayOfDayNames =  [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                                 \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"bordered-div\">\r\n\r\n                {this.setupWeekdayTabs()}\r\n\r\n                <button onClick={() => (this.calculateTotalMiles())}  \r\n                        style={{marginLeft:'25px'}}>Total Mileage</button>\r\n\r\n                {this.testDistance()}  \r\n\r\n                <LocationSelect currentDay={this.state.currentDay} \r\n                                storeListData={this.props.storeListData}\r\n                                addSelectedStoreToCurrentDay={this.addSelectedStoreToCurrentDay}\r\n                                weekDataObject={this} />\r\n\r\n                <Day weekDataObject={this} /> \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    testDistance()\r\n    {\r\n        if (this.state.totalClicked)\r\n        {\r\n            return (<Distance   weekDataObject={this} \r\n                                ref={(element) => (window.distanceElement = element)}/>);\r\n        }\r\n\r\n        else\r\n        {\r\n            return;\r\n        }\r\n    }\r\n\r\n    addSelectedStoreToCurrentDay(storeToAdd, weekDataObject)\r\n    {\r\n        let tempDayData = [...weekDataObject.getDaysData(weekDataObject.state.currentDay)]; \r\n\r\n        tempDayData.push(storeToAdd); \r\n\r\n        weekDataObject.setDaysData(tempDayData, weekDataObject.state.currentDay);\r\n    }\r\n\r\n    setDaysData(daysData, dayToSetDataFor)\r\n    {\r\n        var tempArrayOfDaysData = [...this.state.arrayOfDaysData];\r\n\r\n        var dayIndex = this.arrayOfDayNames.findIndex((day) => (day === dayToSetDataFor));\r\n\r\n        tempArrayOfDaysData[dayIndex] = daysData;\r\n\r\n        this.setState({arrayOfDaysData: tempArrayOfDaysData, currentDaysData: daysData});\r\n    }\r\n\r\n    getDaysData(dayToGetDataFor)\r\n    {\r\n        var dayIndex = this.arrayOfDayNames.findIndex((day) => (day === dayToGetDataFor));\r\n\r\n        return this.state.arrayOfDaysData[dayIndex];\r\n    }\r\n\r\n    setupWeekdayTabs()\r\n    {\r\n        return this.arrayOfDayNames.map((day, index) => \r\n                                            (<button key={day}\r\n                                                onClick={() => (this.setCurrentDay(index))} \r\n                                                style={{margin:'1px'}}>{day}</button>));\r\n    }\r\n\r\n    setCurrentDay(dayIndex)\r\n    {   \r\n        var toSetCurrentDaysData = [...this.getDaysData(this.arrayOfDayNames[dayIndex])];\r\n\r\n        this.setState({ currentDay: this.arrayOfDayNames[dayIndex], \r\n                        currentDaysData: toSetCurrentDaysData});\r\n    }\r\n\r\n    //TODO\r\n    calculateTotalMiles()\r\n    {\r\n        this.setState({ totalClicked: !this.state.totalClicked });\r\n    }\r\n}\r\n\r\nexport default Week;\r\n\r\n","import React from 'react';\r\n\r\nimport Week from './week.js';\r\n\r\nimport Distance from './distance.js';\r\n\r\nclass Main extends React.Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n\r\n    this.state = { weekDisplayed: true };\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n\r\n        <h1>Mileage Calculator</h1>\r\n\r\n        <p>A Note Before Using:</p>\r\n          \r\n        <p>Mileage calculator is still in development, and therefore may be prone to bugs and crashes...</p>\r\n\r\n        <p>Some functionality may be missing or incomplete...</p>\r\n\r\n        {this.renderWeekOrDistance()}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderWeekOrDistance()\r\n  {\r\n    if(this.state.weekDisplayed)\r\n    {\r\n      return (<Week storeListData={this.props.storeListData} />);\r\n    }\r\n\r\n    else\r\n    {\r\n      return (<Distance   mainDataObject={this} \r\n                          ref={(element) => (window.distanceElement = element)}/>);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nimport Main from './main.js';\r\n\r\nclass Data extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = { storeListData: [], dataHasBeenLoaded: false }; \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getStoreListData(this.callbackFunctionToStoreData, this);\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(!this.state.dataHasBeenLoaded)\r\n        {\r\n            return (<h1 style={{textAlign: 'center', padding: '100px'}}>LOADING...</h1>);\r\n        }\r\n\r\n        else\r\n        {\r\n            return (<Main storeListData={this.state.storeListData} />);\r\n        }\r\n    }\r\n\r\n    getStoreListData(callbackFunction, dataClassObject)\r\n    {\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.open(\"GET\", \"https://koreykitchen.github.io/Mileage-Calculator/StoreList.xlsx\", true);\r\n\r\n        request.responseType = \"arraybuffer\";\r\n\r\n        request.onload = function() \r\n        {\r\n            callbackFunction(request.response, dataClassObject);\r\n        };\r\n\r\n        request.send();\r\n    }\r\n\r\n    callbackFunctionToStoreData(dataToStore, dataClassObject)\r\n    {\r\n        var rawData = new Uint8Array(dataToStore);\r\n\r\n        var workbook = XLSX.read(rawData, {type:\"array\"});\r\n\r\n        var worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        var jsonStoreListData = XLSX.utils.sheet_to_json(worksheet, {blankrows:false});\r\n\r\n        jsonStoreListData = jsonStoreListData.filter(storeObject => (storeObject.Name));\r\n\r\n        jsonStoreListData = jsonStoreListData.sort((firstStore, secondStore) =>\r\n                                    {\r\n                                        var firstStoreName = firstStore.Name.toUpperCase();\r\n                                        var secondStoreName = secondStore.Name.toUpperCase();\r\n\r\n                                        var comparison = 0;\r\n\r\n                                        if (firstStoreName > secondStoreName) \r\n                                        {\r\n                                            comparison = 1;\r\n                                        } \r\n\r\n                                        else if (firstStoreName < secondStoreName) \r\n                                        {\r\n                                            comparison = -1;\r\n                                        }\r\n\r\n                                        return comparison;\r\n                                    }\r\n                                );\r\n\r\n        dataClassObject.setState({ storeListData: jsonStoreListData, dataHasBeenLoaded: true });\r\n    }\r\n}\r\n\r\nexport default Data;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Data from './data';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Data />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}